
import threading
import argparse
import sys
import os

class fileThread(threading.Thread):
	kill = False
	

	def run(self):
		print("running".format(self.getName()))
		filename = r'/test.txt'
		filePath = r'/nfs/student/s/shkevin/CS/cs544/lab3' + filename
		print(filePath)
		while not self.kill:
			try:
				if os.path.exists(filePath):
					file = open(filePath, "r")
					contents = file.read()
					print(contents)
					# stopThreads = True
					file.close()
					kill = True
				kill = True
			except IOError:
				kill = True
				print("Can't open file")


if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument("-t", "--threads",action='store', type=int , \
		help='Number of threads to run', required=False)
	args = parser.parse_args()
	workers = []

	if args.threads is not None:
		threads = args.threads
	else:
		threads = 10

	for x in range(threads):
		mythread = fileThread(name = "Thread-{}".format(x + 1))
		workers.append(mythread)
		mythread.start()

	while workers:
		for worker in workers:
			if not worker.isAlive():
				workers.remove(worker)

	fileThread.kill = True
	


